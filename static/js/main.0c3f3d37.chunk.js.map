{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","cn","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","App","useState","titleOfTodo","setTitle","selectedUser","setSelectedUser","preparedTodos","setTodos","isUserError","setIsUserError","isTitleError","setIsTitleError","handleChange","event","target","value","Error","action","method","onSubmit","preventDefault","trim","visibleTodos","newTodo","Math","max","htmlFor","type","placeholder","onChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c3f3d37.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo:React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList:React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find(({ id }) => id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nconst getNewTodoId = (visibleTodos: Todo[]) => {\n  return Math.max(...visibleTodos.map(todo => todo.id)) + 1;\n};\n\ntype Element = HTMLInputElement | HTMLSelectElement;\n\nexport const App = () => {\n  const [titleOfTodo, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [preparedTodos, setTodos] = useState(todos);\n  const [isUserError, setIsUserError] = useState(false);\n  const [isTitleError, setIsTitleError] = useState(false);\n\n  const handleChange = (event: React.ChangeEvent<Element>) => {\n    const { id, value } = event.target;\n\n    switch (id) {\n      case 'titleInputForm':\n        setIsTitleError(false);\n        setTitle(value);\n        break;\n\n      case 'userSelectForm':\n        setIsUserError(false);\n        setSelectedUser(getUserById(+(value)));\n        break;\n\n      default:\n        throw new Error('Errrror');\n    }\n  };\n\n  const handleAdd = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!selectedUser) {\n      setIsUserError(true);\n    }\n\n    if (!titleOfTodo.trim()) {\n      setIsTitleError(true);\n    }\n\n    if (!titleOfTodo.trim() || !selectedUser) {\n      return;\n    }\n\n    const newTodoId = getNewTodoId(preparedTodos);\n\n    const newTodo: Todo = {\n      id: newTodoId,\n      userId: selectedUser ? selectedUser.id : -1,\n      title: titleOfTodo,\n      completed: false,\n      user: selectedUser,\n    };\n\n    setTodos([\n      ...preparedTodos,\n      newTodo,\n    ]);\n    setSelectedUser(null);\n    setTitle('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleAdd}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"#\">\n            Title:\n          </label>\n\n          <input\n            id=\"titleInputForm\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={titleOfTodo}\n            onChange={handleChange}\n          />\n\n          {isTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"#\">\n            User:\n          </label>\n\n          <select\n            id=\"userSelectForm\"\n            data-cy=\"userSelect\"\n            value={selectedUser?.id || 0}\n            onChange={handleChange}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {isUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={preparedTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}